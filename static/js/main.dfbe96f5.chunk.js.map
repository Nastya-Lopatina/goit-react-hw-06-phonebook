{"version":3,"sources":["styles/ContactList.module.css","redux/Contacts/contact-actions.js","components/ СontactForm.js","components/ContactList.js","components/Filter.js","App.js","redux/Contacts/contact-reducer.js","redux/store.js","index.js","styles/ContactForm..module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","className","style","form","this","label","input","type","onChange","button","Component","connect","dispatch","contact","actions","getVisibleContacts","filter","items","normalizedFilter","toLowerCase","includes","contacts","onDeleteContact","contactId","list","map","list_name","onClick","App","createReducer","find","alert","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","reduce","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dfbe96f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3I7bH\",\"list_name\":\"ContactList_list_name__152z0\",\"button\":\"ContactList_button__36Xig\"};","import { createAction } from '@reduxjs/toolkit'\nimport { v4 as uuidv4 } from 'uuid';\n\n\n const addContact = createAction('ContactForm/addContact',\n    ({ name, number }) => {\n        return {\n            payload: { name, number, id: uuidv4() }\n        }\n    }\n);\n\nconst deleteContact = createAction('ContactForm/deleteContact');\n\nconst changeFilter = createAction('ContactForm/changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n\n\n\n\n// const addContact= ({ name, number, id }) => ({\n    \n//     type: Types.ADD_CONTACT,\n//     payload: { name, number, id: uuidv4() },\n    \n// });\n\n// const deleteContact = contactId => ({\n//     type: Types.DELETE_CONTACT,\n//     payload: contactId\n// });\n\n// const changeFilter = value => ({\n//     type: Types.CHANGE_FILTER,\n//     payload: value\n// })","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../styles/ContactForm..module.css';\nimport { connect } from 'react-redux';\nimport actions from '../redux/Contacts/contact-actions';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n      }\n\nhandleChange =(e) => {\n    const {name,value} = e.target;\n    this.setState({[name]: value,})\n};\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    \n    this.props.onSubmit(this.state);\n    this.setState({name: '', number: ''});\n};\n\n\nrender(){\n    \n    return (\n        <form className={style.form} onSubmit = {this.handleSubmit}>\n            <label className ={style.label}>\n                Name\n               <input\n               className = {style.input }\n                type = \"text\"\n                name = \"name\"\n                value = {this.state.name}\n                onChange = {this.handleChange}\n                />\n            </label>\n            <label className ={style.label}>\n                Number\n               <input\n               className = {style.input }\n                type = \"text\"\n                name = \"number\"\n                value = {this.state.number}\n                onChange = {this.handleChange}\n                />\n            </label>\n            <button className = {style.button} type=\"submit\">\n            Добавить контакт\n          </button>\n        </form>\n    )\n}\n\n    }\n\n    ContactForm.propTypes = {\n        AddContact: PropTypes.func,\n      };\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(actions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../styles/ContactList.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../redux/Contacts/contact-actions'\n//import { v4 as uuidv4 } from 'uuid';\n\nconst ContactList = ({contacts,onDeleteContact}) => (\n    <ul className = {style.list}>\n        {contacts.map(({name,number,id}) => (\n        <li\n        className = {style.list_name}\n         key = {id}>\n            {name + ':' + number}\n            \n            {<button\n                className = {style.button}\n                type = 'button'\n                name = 'delete'\n                onClick = {() => onDeleteContact(id) }>\n                    Удалить\n            </button>\n            }\n           \n        </li>\n          \n         ))}\n     \n    </ul>\n)\n\nContactList.propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        })\n    )\n};\n\n\nconst getVisibleContacts = ({ filter, items }) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(({ name }) =>\n     name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\n\nconst mapStateToProps = state => ({\n    contacts: getVisibleContacts(state.contacts)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: contactId => dispatch(actions.deleteContact(contactId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n\n// const getVisibleContacts = ({ filter, items }) => {\n//     return items.filter(({ name }) =>\n//         name.toLowerCase().includes(filter.toLowerCase());\n// };\n\n// const mapSateToProps = state => ({\n//     contacts: getVisibleContacts(state.contacts.items)\n// });","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../redux/Contacts/contact-actions';\n\n\nfunction Filter ({value,onChange}){\n    return(\n        <div>\n           Поиск контактов по имени\n           <input\n           type = 'text'\n           value ={value}\n           onChange = {onChange}/>\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n}\n\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\nonChange: (e) => dispatch(actions.changeFilter(e.target.value))\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter)","import ContactForm from './components/ СontactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\n\nexport default function App() {\n\n\nreturn (\n  <div>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n   \n      <Filter/>\n    \n\n      <ContactList\n        />\n    \n  </div>\n);\n};\n\n\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contact-actions';\n\n\nconst items = createReducer( [], {\n    [actions.addContact]: (state, { payload }) => {\n      if (state.find((contact) => contact.name=== payload.name)) {\n               alert(`${payload.name} уже есть в контактах`);\n               return state;\n        }\n         return [...state, payload]\n    },\n    [actions.deleteContact]: (state, { payload }) => \n       state.filter(contact => contact.id !== payload),\n    \n})\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload}) => payload\n})\n\nexport default combineReducers({ items, filter });\n\n\n\n\n\n// const items = (state = [], { type, payload }) => {\n//     switch (type) {\n//         case Types.ADD_CONTACT:\n//            if (state.find((contact) => contact.name=== payload.name)) {\n//                alert(`${payload.name} уже есть в контактах`);\n//                return state;\n//            }\n//             return [...state, payload]\n//         case Types.DELETE_CONTACT:\n//             return state.filter(({ id }) => id !== payload);\n//         default:\n//             return state;\n//     }\n// }\n// const filter = (state = [], { type, payload }) => {\n//     switch (type) {\n//         case Types.CHANGE_FILTER:\n//             return payload;\n//         default:\n//             return state;\n//      }\n// }\n \n// const find = (state, payload) => {\n//     if (state.find((contact) => contact.name === payload.name)) {\n//                alert(`${payload.name} уже есть в контактах`);\n//                return state;\n//            }\n// }\n","import { configureStore,getDefaultMiddleware} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport reduce from '../redux/Contacts/contact-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER, } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n    storage,\n  blacklist: ['filter'],\n}\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, reduce),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n   \n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line \nexport default {store,persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm__form__3fu15\",\"label\":\"ContactForm__label__czKiJ\",\"input\":\"ContactForm__input__2ksW3\",\"button\":\"ContactForm__button__Dl2ri\"};"],"sourceRoot":""}